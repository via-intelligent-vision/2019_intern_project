Tuesday, June 11th

Accomplished:
- Successfully installed TensorFlow
- Downloaded dataset images
- Walked through "Sample Baseline code for TensorFlow Object Detection API for Stanford Cars"
- Created an individual TFRecord

Need to Accomplish:
- Learn how to draw bounding boxes
- Try different models on the Stanford cars dataset

Wednesday, June 12th

Accomplished:
- Drew bounding boxes and contour maps for a few individual images
- Tested sliding window algorithm

Need to Accomplish:
- Create TFRecords for the entire dataset
- Identify best-fit bounding box
- Calculate accuracy and confidence level

Thursday, June 13th

Accomplished:
- Parsed csv and image files for TFRecord creation
- Created TFRecords for the entire dataset

Need to Accomplish:
- Store TFRecords in correct format
- Train different models
- Test models and measure accuracy
- Design new model

Friday, June 14th

Accomplished:
- Installed open-cv and tested it on the cars dataset
- Researched mean Average Precision and accuracy metrics
- Installed pytorch

Need to Accomplish:
- Run model and test accuracy
- Properly install Jupyter Notebook

Monday, June 17th

Accomplished:
- Compiled accuracy checker
- Showed and explained project and installation process to Casey
- Started building training dataset for 30 additional classes

Need to Accomplish:
- Run model and test accuracy
- Properly install Jupyter Notebook
- Create graphs
- Train and improve model
- Finish building additional dataset

Tuesday, June 18th

Accomplished:
- Finished building training dataset for 30 2019 models (5 images each)
- Went through tutorials for building NNs from scratch

Need to Accomplish:
- Train and test model
- Create my own model

Wednesday, June 19th

Accomplished:
- Used LabelImg to label 150 new images with bounding boxes
- Trained baseline model
- Produced csv to train new dataset
- Created testing dataset
- Produced necessary pbtxt and tfrecord files
- Tried using model on training images to prove recognition (will try on testing images later)

Need to Accomplish:
- Validate model on testing images
- Calculate accuracy, precision, recall, specificity, AUC, etc.
- Modify config file to alter model

Thursday, June 20th

Accomplished:
- Compiled new training and validation datasets
- Used LabelImg to draw bounding boxes and labels for all 210 images
- Converted xml files to csv files

Need to Accomplish:
- Run training program on new dataset
- Compile testing dataset
- Test and evaluate model

Monday, June 24th

Accomplished:
- Compiled testing dataset
- Tried using model on new training dataset, but predictions were inaccurate

Need to Accomplish:
- Debug pipeline.config
- Test pretrained model
- Fix labels in TensorBoard
- Build our own model

Tuesday, June 25th

Accomplished:
- Obtained precision of ~0.02 while training
- Used shortcut code to create massive datasets for each class
- Built new github repo to store everything

Need to Accomplish:
- Find efficient way to draw bounding boxes and label images
- Reduce loss to <0.5 and precision to >0.8

Wednesday, June 26th

Accomplished:
- Adapted labeling code to draw bounding boxes for our data
- Ran labeling code on all 30 classes to produce csv rows

Need to Accomplish:
- Merge into new big csv
- Reformat csv
- Train and validate data
- Test data

Thursday, June 27th

Accomplished:
- Cleaned merged csv data into one big file
- Produced TFRecords
- Started training

Need to Accomplish:
- Finish training and analyze results
- Achieve accuracy > 85%

Friday, June 28th

Accomplished:
- Finished training and testing (2 images per class)
- Loss at 9, mAP at ~0.25
- Testing accuracy at ~60%

Need to Accomplish:
- Add more data
- Re-train
- Increase accuracy, precision, and recall

Monday, July 1st

Accomplished:
- Expanded datasets for five classes
- Re-trained model
- Tested faster_rcnn_nas

Need to Accomplish:
- Try more pre-trained models
- Develop our own model in Keras or PyTorch

Tuesday-Friday, July 2nd-5th

Accomplished:
- Expanded all datasets
- Discovered accurate bounding box strategy
- Ran program to draw bounding boxes for all training images
- Compiled giant CSV
- Created TFRecords
- Trained SSD Resnet50 FPN and Faster RCNN Resnet101

Need to Accomplish:
- Test trained models on testing data
- Calculate mAP, accuracy, etc.
- Find best model

Monday, July 8th

Accomplished:
- Wrote script to store testing results in CSV files and determine correctness
- Tested models on testing data
- Calculated mAP and accuracy

Need to Accomplish:
- Calculate IoU for each test image
- Properly calculate and analyze mAP

Tuesday, July 9th

Accomplished:
- Wrote script to calculate IoU values and store in csv
- Calculated precision, recall, and IoU for faster RCNN ResNet101 and SSD Resnet50 FPN
- Combined original 196 classes with 30 new classes

Need to Accomplish:
- Train and test entire dataset

Wednesday, July 10th
 
Accomplished:
- Started training entire dataset
- Wrote script to plot precision vs. recall
- Found more accurate bounding box drawer
- Labeled and ran code to automatically draw bounding boxes for all images
- Created TFRecords using 3 different models

Need to Accomplish:
- Finish training 226 classes
- Compare to baseline model
- Outline model from scratch

Thursday-Friday, July 11-12th

Accomplished:
- Continued training entire dataset on SSD Resnet50 and Faster RCNN Resnet101
- Calculated IoU and mAP
- Drafted final presentation

Need to Accomplish:
- Finish training
- Test pretrained models
- Learn PyTorch and data augmentation changes

Monday, July 15th

Accomplished:
- Finished creating Google presentation

Need to Accomplish:
- Fix training errors and redo
- Label original 16000+ images using Faster RCNN

Tuesday, July 16th

Accomplished:
- Started re-labeling

Need to Accomplish:
- Finish re-labeling

Wednesday, July 17th

Accomplished:
- Finished re-labeling

Need to Accomplish:
- Re-train at least 2 models on all images
- Prove that our chosen model works better than the baseline
